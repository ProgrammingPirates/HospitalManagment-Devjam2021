/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class hospitalInformation extends javax.swing.JFrame {

    /**
     * Creates new form hospitalInformation
     */
    public hospitalInformation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(280, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(204, 204, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Hospital Managment Systems was introduced to solve the complications coming from managing all \nthe paper works of every patient associated with the various departments of hospitalization\nwith confidentiality. HMS provides the ability to manage all the paperwork in one place, \nreducing the work of staff in arranging and analyzing the paperwork of the patients. HMS does \nmany works like:\n                 * Maintain the medical records of the patient  \n\n                 * Maintain the contact details of the patient\n\n                 * Keep track of the appointment dates\n\nFeatures of Hospital Management System:\n\nAppointment Management\n\n\nFor hospitals having their own site, appointment widgets will be integrated onto the site.\n Patients visiting the hospital’s website can book online appointments with ease.\n\n\nBilling Management\n\n\nIntegrated Billing with treatments, Lab and Radiology. Alerts will be sent on Discount\n Authorisation. Automatic due capture, Option to bill before and after consultation.\n\n\n\nPrescription Management\n\n\nManage commonly and recently used medicines. Option to show medicines available in the \npharmacy. SMS prescriptions to Patients.\n\n\nDischarge Summary\n\n\nTemplate based Discharge Summary. ICD10 integration. Option to prevent discharge summary till\n IP bill is closed.\n\n\nOperation Theatre Management\n\n\nAutomatic notification can be sent to customers on test results. Lab notifications like\nemail, SMS of the test reports sent from the Automated Lab notification module.\n\n\n\nPharmacy Management\n\n\nComprehensive Pharmacy Management handles stock, Prescription Integration, Ward Request, \nStock Management, Stock Moment and intelligent reports.\n\n\nLab Management\n\n\nComprehensive Lab Management handles complete order management, Custom Reports, Smart \nNotifications, Credit Settlement, detailed MIS Reports, Analytics and App for Phlebotomist.\n\n\nMaster Information Systems\n\n\nLets you access entire MIS data from your palm.\n\n\nManage Multiple Locations\n\n\nAny number of branches can be added and managed using a single account.\n\n\n\nBenefits of Hospital Management System:\n\n\nWe have so far clarified on the importance of HMS, it is your responsibility to pick out the\n right kind of HMS for your needs and purposes. Here we give more information on the benefits\n of various HMS and the impact it creates on hospital systems.\n\n\nEasy Patient data retrieval:\n\n\nHMS makes it possible to access all the data related to a patient via a system by the means \nof a few simple clicks. Information like patient history, current illness, doctors involved, \ntests reports taken, billing information and many more can be made visible to the user. \nThese data will help to connect the dots about the patient, like specific diagnosis, related\n treatment, and medication.\n\n\nThe Electronic Medical Record (EMR)  or Electronic Health Record (EHR):\n\n\nThis electronic-based medical record system can be viewed as a patient’s health chart. \nIt retrieves information based on the patient’s name or medical record number or the \nphysician’s record number.\n\n\nIncreased Data security:\n\n\nThe patient data can be kept a hundred percent safe by using HMS in your hospital. It can be \nmade accessible by only a limited amount of authorized personnel. With HMS, all the data is \nstored on a server or cloud and kept safe by just securing the login information safe.\n\n\nImprove Visibility and Transparency:\n\n\nHospital Management System (HMS) improves the visibility and transparency in the complete \nmanagement process and in all records.\n\n\nStreamline Accurate Reporting:\n\n\nIt helps in streamlining the accurate reporting with the help of updated and accurate \nrecords.\n\n\nImproved Quality Control:\n\n\nHospital Management System improves the quality control on the products and services of the\n hospital.\n\n\nImproved Management Visibility:\n\n\nIt also improves the management visibility of hospital, all information, and data regarding\n the patient, doctor and medicine could be seen by any department easily.\n\n\nEase to Access System Facilities:\n\n\nHospital Management System makes it easy to get access to the management system facilities \nfor the authorized users and keep it safe from unauthorized users.\n\n\nCost Effective:\n\n\nHMS not only saves time in the hospital but also is cost-effective in decreasing the number \nof people working on the system of manual entry of data and paperwork. The implementation \nof His will decrease the human intervention into the system thereby avoiding human-caused \nerrors.\n\n\nEvery hospital has different needs, analyze what is best for your requirement and install \nthe apt HMS system.\n\n\n                 * Save the insurance information for later reference\n\n                 * Tracking the bill payments.");
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 770, 230));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Close.png"))); // NOI18N
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add45.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hospitalInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hospitalInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hospitalInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hospitalInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hospitalInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
